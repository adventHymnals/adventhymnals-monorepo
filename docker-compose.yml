version: '3.8'

services:
  advent-hymnals-web:
    image: ${ADVENT_HYMNALS_IMAGE:-ghcr.io/adventhymnals/advent-hymnals-web:latest}
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_GA_ID=${NEXT_PUBLIC_GA_ID}
      - SITE_URL=${SITE_URL:-https://adventhymnals.org}
      - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL:-https://adventhymnals.org}
      - GOOGLE_VERIFICATION=${GOOGLE_VERIFICATION}
      - YANDEX_VERIFICATION=${YANDEX_VERIFICATION}
    volumes:
      - hymnal-data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - web-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot-data:/etc/letsencrypt
      - certbot-www:/var/www/certbot
      - nginx-logs:/var/log/nginx
      - ./nginx-config:/etc/nginx/conf.d
    command: >
      sh -c "
      # Create initial HTTP configuration
      cat > /etc/nginx/conf.d/default.conf << 'EOF'
      server {
          listen 80;
          server_name adventhymnals.org www.adventhymnals.org;
          
          location /.well-known/acme-challenge/ {
              root /var/www/certbot;
          }
          
          location / {
              proxy_pass http://advent-hymnals-web:3000;
              proxy_http_version 1.1;
              proxy_set_header Upgrade \$$http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host \$$host;
              proxy_set_header X-Real-IP \$$remote_addr;
              proxy_set_header X-Forwarded-For \$$proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto \$$scheme;
              proxy_cache_bypass \$$http_upgrade;
          }
      }
      EOF
      
      # Start nginx
      nginx -g 'daemon off;'
      "
    restart: unless-stopped
    networks:
      - web-network

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-data:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    command: >
      sh -c "while :; do
        certbot renew --webroot --webroot-path=/var/www/certbot --quiet
        sleep 12h
      done"
    depends_on:
      - nginx
    restart: unless-stopped

volumes:
  hymnal-data:
    driver: local
  certbot-data:
    driver: local
  certbot-www:
    driver: local
  nginx-logs:
    driver: local

networks:
  web-network:
    name: web-network
    external: true