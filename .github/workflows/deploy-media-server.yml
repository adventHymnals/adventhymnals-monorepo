name: Build and Deploy Media Server

on:
  push:
    paths:
      - 'data/sources/**'
      - 'apps/media-server/**'
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even without changes'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: adventhymnals/media-server

jobs:
  build-media-server:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
      image_digest: ${{ steps.build.outputs.digest }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Check for relevant changes
        id: changes
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ inputs.force_deploy }}" = "true" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Forced deployment requested"
          elif git diff --name-only HEAD~1 HEAD | grep -E "(data/sources/|apps/media-server/)" > /dev/null; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Relevant changes detected"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No relevant changes detected"
          fi
      
      - name: Log in to Container Registry
        if: steps.changes.outputs.has_changes == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        if: steps.changes.outputs.has_changes == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Set up Docker Buildx
        if: steps.changes.outputs.has_changes == 'true'
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        if: steps.changes.outputs.has_changes == 'true'
        id: build
        uses: docker/build-push-action@v5
        with:
          context: apps/media-server
          file: apps/media-server/Dockerfile.production
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
  trigger-deployment:
    needs: build-media-server
    if: needs.build-media-server.outputs.image_tag != ''
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - name: Trigger server deployment workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: deploy
          client-payload: |
            {
              "triggered_by": "media-server-build",
              "media_server_image": "ghcr.io/adventhymnals/media-server:latest",
              "sha": "${{ github.sha }}",
              "actor": "${{ github.actor }}"
            }
      
      - name: Build completion summary
        run: |
          echo "âœ… Media server build completed successfully"
          echo "ðŸš€ Server deployment triggered"
          echo "ðŸ“¦ Media server image: ${{ needs.build-media-server.outputs.image_tag }}"
          echo "ðŸ”— Check deployment status in Actions tab"