name: Build Flutter Mobile Apps

on:
  push:
    branches: [master, main]
    paths:
      - 'apps/advent_hymnals_mobile/**'
      - 'packages/**' # If mobile app uses shared packages
    tags:
      - 'mobile-v*' # Trigger on version tags like mobile-v1.0.0
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      create_release:
        description: 'Create GitHub Release'
        required: false
        default: false
        type: boolean

env:
  FLUTTER_VERSION: '3.19.0'

permissions:
  contents: write
  packages: write

concurrency:
  group: "flutter-build-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  # Build Android APK and AAB
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Get Flutter dependencies
        working-directory: apps/advent_hymnals_mobile
        run: flutter pub get
        
      - name: Build APK
        working-directory: apps/advent_hymnals_mobile
        run: |
          flutter build apk --release
          flutter build apk --release --target-platform android-arm64
          
      - name: Build AAB (Android App Bundle)
        working-directory: apps/advent_hymnals_mobile
        run: flutter build appbundle --release
        
      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            apps/advent_hymnals_mobile/build/app/outputs/flutter-apk/app-release.apk
            apps/advent_hymnals_mobile/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            apps/advent_hymnals_mobile/build/app/outputs/bundle/release/app-release.aab
          retention-days: 30

  # Build Linux executable
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev \
            libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad libgstreamer-plugins-bad1.0-dev
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop
        
      - name: Get Flutter dependencies
        working-directory: apps/advent_hymnals_mobile
        run: flutter pub get
        
      - name: Build Linux executable
        working-directory: apps/advent_hymnals_mobile
        run: flutter build linux --release
        
      - name: Package Linux build
        working-directory: apps/advent_hymnals_mobile
        run: |
          cd build/linux/x64/release/bundle
          tar -czf ../../../../../advent-hymnals-mobile-linux.tar.gz *
          
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: apps/advent_hymnals_mobile/advent-hymnals-mobile-linux.tar.gz
          retention-days: 30

  # Build Windows executable with installer
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop
        
      - name: Get Flutter dependencies
        working-directory: apps/advent_hymnals_mobile
        run: flutter pub get
        
      - name: Build Windows executable
        working-directory: apps/advent_hymnals_mobile
        run: flutter build windows --release --verbose
        
      - name: Rename and sign executable (development)
        working-directory: apps/advent_hymnals_mobile
        run: |
          # First rename the executable to have proper display name
          $originalPath = "build\windows\x64\runner\Release\AdventHymnals.exe"
          $newPath = "build\windows\x64\runner\Release\Advent Hymnals.exe"
          
          if (Test-Path $originalPath) {
            Rename-Item -Path $originalPath -NewName "Advent Hymnals.exe"
            Write-Host "✅ Renamed executable to 'Advent Hymnals.exe'"
          } else {
            Write-Host "❌ Original executable not found at: $originalPath"
            ls "build\windows\x64\runner\Release\"
          }
          
          # Create self-signed certificate for testing
          $cert = New-SelfSignedCertificate -Subject "CN=Advent Hymnals" -Type CodeSigning -KeyUsage DigitalSignature -FriendlyName "Advent Hymnals Code Signing" -CertStoreLocation "Cert:\CurrentUser\My" -KeyLength 2048
          
          # Sign the renamed executable
          if (Test-Path $newPath) {
            Set-AuthenticodeSignature -FilePath $newPath -Certificate $cert
            Write-Host "✅ Executable signed with self-signed certificate"
          } else {
            Write-Host "❌ Renamed executable not found at: $newPath"
          }
        shell: powershell
        
      - name: Install NSIS for installer creation
        run: choco install nsis -y
        
      - name: Create LICENSE file
        working-directory: apps/advent_hymnals_mobile
        run: |
          if (-not (Test-Path "LICENSE")) {
            $license = @"
          MIT License
          
          Copyright (c) 2024 Advent Hymnals
          
          Permission is hereby granted, free of charge, to any person obtaining a copy
          of this software and associated documentation files (the "Software"), to deal
          in the Software without restriction, including without limitation the rights
          to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
          copies of the Software, and to permit persons to whom the Software is
          furnished to do so, subject to the following conditions:
          
          The above copyright notice and this permission notice shall be included in all
          copies or substantial portions of the Software.
          
          THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
          IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
          FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
          AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
          LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
          OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
          SOFTWARE.
          "@
            $license | Out-File -FilePath "LICENSE" -Encoding UTF8
          }
        shell: powershell
        
      - name: Create installer script
        working-directory: apps/advent_hymnals_mobile
        run: |
          $installerScript = @"
          !define APP_NAME "Advent Hymnals"
          !define APP_VERSION "1.0.0"
          !define APP_PUBLISHER "Advent Hymnals"
          !define APP_URL "https://adventhymnals.org"
          !define APP_DESCRIPTION "Comprehensive hymnal desktop application"
          
          !include "MUI2.nsh"
          
          Name "`${APP_NAME}"
          OutFile "advent-hymnals-installer.exe"
          InstallDir "`$PROGRAMFILES64\`${APP_NAME}"
          InstallDirRegKey HKLM "Software\`${APP_NAME}" "InstallPath"
          RequestExecutionLevel admin
          
          !define MUI_ABORTWARNING
          
          !insertmacro MUI_PAGE_WELCOME
          !insertmacro MUI_PAGE_LICENSE "LICENSE"
          !insertmacro MUI_PAGE_DIRECTORY
          !insertmacro MUI_PAGE_INSTFILES
          !insertmacro MUI_PAGE_FINISH
          
          !insertmacro MUI_UNPAGE_WELCOME
          !insertmacro MUI_UNPAGE_CONFIRM
          !insertmacro MUI_UNPAGE_INSTFILES
          !insertmacro MUI_UNPAGE_FINISH
          
          !insertmacro MUI_LANGUAGE "English"
          
          Section "Main Application" SecMain
            SetOutPath "`$INSTDIR"
            
            File /r "build\windows\x64\runner\Release\*"
            
            WriteRegStr HKLM "Software\`${APP_NAME}" "InstallPath" "`$INSTDIR"
            WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "DisplayName" "`${APP_NAME}"
            WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "UninstallString" "`$INSTDIR\uninstall.exe"
            WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "DisplayIcon" "`$INSTDIR\Advent Hymnals.exe"
            WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "Publisher" "`${APP_PUBLISHER}"
            WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "URLInfoAbout" "`${APP_URL}"
            WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "DisplayVersion" "`${APP_VERSION}"
            WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "NoModify" 1
            WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "NoRepair" 1
            
            CreateDirectory "`$SMPROGRAMS\`${APP_NAME}"
            CreateShortcut "`$SMPROGRAMS\`${APP_NAME}\`${APP_NAME}.lnk" "`$INSTDIR\Advent Hymnals.exe"
            CreateShortcut "`$SMPROGRAMS\`${APP_NAME}\Uninstall.lnk" "`$INSTDIR\uninstall.exe"
            CreateShortcut "`$DESKTOP\`${APP_NAME}.lnk" "`$INSTDIR\Advent Hymnals.exe"
            
            WriteUninstaller "`$INSTDIR\uninstall.exe"
          SectionEnd
          
          Section "Uninstall"
            Delete "`$INSTDIR\*"
            RMDir /r "`$INSTDIR"
            
            Delete "`$SMPROGRAMS\`${APP_NAME}\*"
            RMDir "`$SMPROGRAMS\`${APP_NAME}"
            Delete "`$DESKTOP\`${APP_NAME}.lnk"
            
            DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}"
            DeleteRegKey HKLM "Software\`${APP_NAME}"
          SectionEnd
          "@
          
          $installerScript | Out-File -FilePath "installer.nsi" -Encoding UTF8
          Write-Host "✅ Installer script created"
        shell: powershell
        
      - name: Build installer
        working-directory: apps/advent_hymnals_mobile
        run: |
          makensis installer.nsi
          if (Test-Path "advent-hymnals-installer.exe") {
            Write-Host "✅ Installer created successfully"
          } else {
            Write-Host "❌ Installer creation failed"
            exit 1
          }
        shell: powershell
        
      - name: Sign installer
        working-directory: apps/advent_hymnals_mobile
        run: |
          # Get the certificate we created earlier
          $cert = Get-ChildItem -Path "Cert:\CurrentUser\My" | Where-Object { $_.Subject -eq "CN=Advent Hymnals" } | Select-Object -First 1
          
          if ($cert -and (Test-Path "advent-hymnals-installer.exe")) {
            Set-AuthenticodeSignature -FilePath "advent-hymnals-installer.exe" -Certificate $cert
            Write-Host "✅ Installer signed with self-signed certificate"
          }
        shell: powershell
        
      - name: Package Windows build (portable)
        working-directory: apps/advent_hymnals_mobile
        run: |
          cd build/windows/x64/runner/Release
          7z a ../../../../../advent-hymnals-portable-windows.zip *
          
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            apps/advent_hymnals_mobile/advent-hymnals-portable-windows.zip
            apps/advent_hymnals_mobile/advent-hymnals-installer.exe
          retention-days: 30

  # Build macOS app (optional - requires macOS runner)
  build-macos:
    runs-on: macos-latest
    if: false # Disable for now, enable if needed
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Enable macOS desktop
        run: flutter config --enable-macos-desktop
        
      - name: Get Flutter dependencies
        working-directory: apps/advent_hymnals_mobile
        run: flutter pub get
        
      - name: Build macOS app
        working-directory: apps/advent_hymnals_mobile
        run: flutter build macos --release
        
      - name: Package macOS build
        working-directory: apps/advent_hymnals_mobile
        run: |
          cd build/macos/Build/Products/Release
          zip -r ../../../../../advent-hymnals-mobile-macos.zip *.app
          
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: apps/advent_hymnals_mobile/advent-hymnals-mobile-macos.zip
          retention-days: 30

  # Create GitHub Release with all artifacts
  create-release:
    needs: [build-android, build-linux, build-windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && inputs.create_release == 'true'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Display artifact structure
        run: ls -la artifacts/
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: mobile-v${{ inputs.version }}
          name: "Advent Hymnals Mobile v${{ inputs.version }}"
          body: |
            ## Advent Hymnals Mobile App v${{ inputs.version }}
            
            ### Downloads
            - **Android APK (Universal)**: `app-release.apk`
            - **Android APK (ARM64)**: `app-arm64-v8a-release.apk` 
            - **Android App Bundle**: `app-release.aab` (for Google Play Store)
            - **Linux**: `advent-hymnals-mobile-linux.tar.gz`
            - **Windows Installer**: `advent-hymnals-installer.exe` (Recommended)
            - **Windows Portable**: `advent-hymnals-portable-windows.zip`
            
            ### Installation Instructions
            
            **Android:**
            1. Download the appropriate APK file
            2. Enable "Install from unknown sources" in your Android settings
            3. Install the APK file
            
            **Linux:**
            1. Download and extract `advent-hymnals-mobile-linux.tar.gz`
            2. Run the executable: `./advent_hymnals_mobile`
            
            **Windows:**
            - **Installer (Recommended)**: Download and run `advent-hymnals-installer.exe`
              - Creates desktop and start menu shortcuts
              - Includes uninstaller
              - Self-signed certificate (Windows will show security warning)
            - **Portable**: Download and extract `advent-hymnals-portable-windows.zip`, then run `Advent Hymnals.exe`
            
            **Windows Security Note:** This app uses self-signed certificates. Windows will show a security warning. Click "More info" → "Run anyway" to proceed.
            
            ### Changes
            See commit history for detailed changes in this release.
          files: |
            artifacts/android-builds/*
            artifacts/linux-build/*
            artifacts/windows-build/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Development builds (for every push, no release)
  upload-development-builds:
    needs: [build-android, build-linux, build-windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: development-builds
          
      - name: Upload development builds
        uses: actions/upload-artifact@v4
        with:
          name: development-builds-${{ github.sha }}
          path: development-builds/
          retention-days: 7