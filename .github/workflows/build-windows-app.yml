name: Build Windows Desktop App

on:
  workflow_dispatch:
    inputs:
      create_installer:
        description: 'Create installer package'
        required: false
        default: true
        type: boolean
      self_sign:
        description: 'Self-sign the executable'
        required: false
        default: true
        type: boolean
  push:
    branches: [main, master]
    paths:
      - 'apps/advent_hymnals_mobile/**'
  pull_request:
    branches: [main, master]
    paths:
      - 'apps/advent_hymnals_mobile/**'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Enable Windows Desktop
      working-directory: apps/advent_hymnals_mobile
      run: flutter config --enable-windows-desktop
      
    - name: Install dependencies
      working-directory: apps/advent_hymnals_mobile
      run: flutter pub get
      
    - name: Generate code (if needed)
      working-directory: apps/advent_hymnals_mobile
      run: |
        if (Test-Path "lib/**/*.g.dart") {
          flutter packages pub run build_runner build --delete-conflicting-outputs
        }
      shell: powershell
      
    - name: Build Windows app
      working-directory: apps/advent_hymnals_mobile
      run: flutter build windows --release --verbose
      
    - name: Self-sign executable (optional)
      if: ${{ github.event.inputs.self_sign == 'true' || github.event.inputs.self_sign == '' }}
      working-directory: apps/advent_hymnals_mobile
      run: |
        # Create self-signed certificate for testing
        $cert = New-SelfSignedCertificate -Subject "CN=Advent Hymnals" -Type CodeSigning -KeyUsage DigitalSignature -FriendlyName "Advent Hymnals Code Signing" -CertStoreLocation "Cert:\CurrentUser\My" -KeyLength 2048
        
        # Sign the executable
        $exePath = "build\windows\x64\runner\Release\Advent Hymnals.exe"
        if (Test-Path $exePath) {
          Set-AuthenticodeSignature -FilePath $exePath -Certificate $cert
          Write-Host "‚úÖ Executable signed with self-signed certificate"
        } else {
          Write-Host "‚ùå Executable not found at: $exePath"
        }
      shell: powershell
      
    - name: Install NSIS for installer creation
      if: ${{ github.event.inputs.create_installer == 'true' || github.event.inputs.create_installer == '' }}
      run: |
        choco install nsis -y
        
    - name: Create installer script
      if: ${{ github.event.inputs.create_installer == 'true' || github.event.inputs.create_installer == '' }}
      working-directory: apps/advent_hymnals_mobile
      run: |
        $installerScript = @"
        !define APP_NAME "Advent Hymnals"
        !define APP_VERSION "1.0.0"
        !define APP_PUBLISHER "Advent Hymnals"
        !define APP_URL "https://adventhymnals.org"
        !define APP_DESCRIPTION "Comprehensive hymnal desktop application"
        
        !include "MUI2.nsh"
        
        Name "`${APP_NAME}"
        OutFile "advent-hymnals-installer.exe"
        InstallDir "`$PROGRAMFILES64\`${APP_NAME}"
        InstallDirRegKey HKLM "Software\`${APP_NAME}" "InstallPath"
        RequestExecutionLevel admin
        
        !define MUI_ABORTWARNING
        !define MUI_ICON "windows\runner\resources\app_icon.ico"
        
        !insertmacro MUI_PAGE_WELCOME
        !insertmacro MUI_PAGE_LICENSE "LICENSE"
        !insertmacro MUI_PAGE_DIRECTORY
        !insertmacro MUI_PAGE_INSTFILES
        !insertmacro MUI_PAGE_FINISH
        
        !insertmacro MUI_UNPAGE_WELCOME
        !insertmacro MUI_UNPAGE_CONFIRM
        !insertmacro MUI_UNPAGE_INSTFILES
        !insertmacro MUI_UNPAGE_FINISH
        
        !insertmacro MUI_LANGUAGE "English"
        
        Section "Main Application" SecMain
          SetOutPath "`$INSTDIR"
          
          File /r "build\windows\x64\runner\Release\*"
          
          WriteRegStr HKLM "Software\`${APP_NAME}" "InstallPath" "`$INSTDIR"
          WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "DisplayName" "`${APP_NAME}"
          WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "UninstallString" "`$INSTDIR\uninstall.exe"
          WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "DisplayIcon" "`$INSTDIR\Advent Hymnals.exe"
          WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "Publisher" "`${APP_PUBLISHER}"
          WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "URLInfoAbout" "`${APP_URL}"
          WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "DisplayVersion" "`${APP_VERSION}"
          WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "NoModify" 1
          WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "NoRepair" 1
          
          CreateDirectory "`$SMPROGRAMS\`${APP_NAME}"
          CreateShortcut "`$SMPROGRAMS\`${APP_NAME}\`${APP_NAME}.lnk" "`$INSTDIR\Advent Hymnals.exe"
          CreateShortcut "`$SMPROGRAMS\`${APP_NAME}\Uninstall.lnk" "`$INSTDIR\uninstall.exe"
          CreateShortcut "`$DESKTOP\`${APP_NAME}.lnk" "`$INSTDIR\Advent Hymnals.exe"
          
          WriteUninstaller "`$INSTDIR\uninstall.exe"
        SectionEnd
        
        Section "Uninstall"
          Delete "`$INSTDIR\*"
          RMDir /r "`$INSTDIR"
          
          Delete "`$SMPROGRAMS\`${APP_NAME}\*"
          RMDir "`$SMPROGRAMS\`${APP_NAME}"
          Delete "`$DESKTOP\`${APP_NAME}.lnk"
          
          DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}"
          DeleteRegKey HKLM "Software\`${APP_NAME}"
        SectionEnd
        "@
        
        $installerScript | Out-File -FilePath "installer.nsi" -Encoding UTF8
        Write-Host "‚úÖ Installer script created"
      shell: powershell
      
    - name: Create simple LICENSE file if missing
      if: ${{ github.event.inputs.create_installer == 'true' || github.event.inputs.create_installer == '' }}
      working-directory: apps/advent_hymnals_mobile
      run: |
        if (-not (Test-Path "LICENSE")) {
          $license = @"
        MIT License
        
        Copyright (c) 2024 Advent Hymnals
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        "@
          $license | Out-File -FilePath "LICENSE" -Encoding UTF8
        }
      shell: powershell
      
    - name: Build installer
      if: ${{ github.event.inputs.create_installer == 'true' || github.event.inputs.create_installer == '' }}
      working-directory: apps/advent_hymnals_mobile
      run: |
        makensis installer.nsi
        if (Test-Path "advent-hymnals-installer.exe") {
          Write-Host "‚úÖ Installer created successfully"
        } else {
          Write-Host "‚ùå Installer creation failed"
          exit 1
        }
      shell: powershell
      
    - name: Sign installer (optional)
      if: ${{ (github.event.inputs.create_installer == 'true' || github.event.inputs.create_installer == '') && (github.event.inputs.self_sign == 'true' || github.event.inputs.self_sign == '') }}
      working-directory: apps/advent_hymnals_mobile
      run: |
        # Get the certificate we created earlier
        $cert = Get-ChildItem -Path "Cert:\CurrentUser\My" | Where-Object { $_.Subject -eq "CN=Advent Hymnals" } | Select-Object -First 1
        
        if ($cert -and (Test-Path "advent-hymnals-installer.exe")) {
          Set-AuthenticodeSignature -FilePath "advent-hymnals-installer.exe" -Certificate $cert
          Write-Host "‚úÖ Installer signed with self-signed certificate"
        }
      shell: powershell
      
    - name: Upload Windows app artifacts
      uses: actions/upload-artifact@v4
      with:
        name: advent-hymnals-windows
        path: |
          apps/advent_hymnals_mobile/build/windows/x64/runner/Release/
          apps/advent_hymnals_mobile/advent-hymnals-installer.exe
        retention-days: 30
        
    - name: Create release assets info
      working-directory: apps/advent_hymnals_mobile
      run: |
        $buildDir = "build\windows\x64\runner\Release"
        $exePath = "$buildDir\Advent Hymnals.exe"
        $installerPath = "advent-hymnals-installer.exe"
        
        $summary = @"
        ## Windows Desktop App Build Summary
        
        **Application Name:** Advent Hymnals
        **Build Type:** Release
        **Platform:** Windows x64
        
        ### üì¶ Generated Files:
        - **Executable:** ``Advent Hymnals.exe`` ($(if (Test-Path $exePath) { (Get-Item $exePath).Length / 1MB | ForEach-Object { "{0:N1} MB" -f $_ } } else { "Not found" }))
        - **Installer:** ``advent-hymnals-installer.exe`` ($(if (Test-Path $installerPath) { (Get-Item $installerPath).Length / 1MB | ForEach-Object { "{0:N1} MB" -f $_ } } else { "Not created" }))
        
        ### ‚ö†Ô∏è Installation Notes:
        - This application uses **self-signed certificates** for testing
        - Windows will show security warnings during installation
        - Users should click "More info" ‚Üí "Run anyway" to proceed
        - For production deployment, consider purchasing a code signing certificate
        
        ### üõ†Ô∏è Installation Options:
        1. **Installer Package:** Use ``advent-hymnals-installer.exe`` for automated installation
        2. **Portable App:** Extract and run ``Advent Hymnals.exe`` directly from build folder
        
        ### üìù Next Steps for Production:
        - Purchase code signing certificate from trusted CA
        - Submit to Microsoft Store for automatic trust
        - Create MSI package for enterprise deployment
        "@
        
        Write-Output $summary | Out-File -FilePath "build-summary.md" -Encoding UTF8
        Write-Output $summary
      shell: powershell
      
    - name: Display build summary
      working-directory: apps/advent_hymnals_mobile
      run: |
        if (Test-Path "build-summary.md") {
          Get-Content "build-summary.md" | Write-Output
        }
      shell: powershell